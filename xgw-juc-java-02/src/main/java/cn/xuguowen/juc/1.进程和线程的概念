一、进程：
    ① 程序由指令和数据组成，但这些指令要运行，数据要读写，就必须将指令加载至 CPU，数据加载至内存。在指令运行过程中还需要用到磁盘、网络等设备。进程就是用来加载指令、管理内存、管理 IO 的。
    ② 当一个程序被运行，从磁盘加载这个程序的代码至内存，这时就开启了一个进程。
    ③ 进程就可以视为程序的一个实例。大部分程序可以同时运行多个实例进程（例如记事本、画图、浏览器等），也有的程序只能启动一个实例进程（例如网易云音乐、360 安全卫士等）。
二、线程
    ① 一个进程之内可以存在一到多个线程。
    ② 一个线程就是一个指令流，将指令流中的一条条指令以一定的顺序交给 CPU 执行
    ③ Java 中，线程作为最小调度单位，进程作为资源分配的最小单位。
三、二者对比
    ① 进程基本上相互独立的，而线程存在于进程内，是进程的一个子集。
    ② 每个进程都有自己的内存空间和系统资源，而线程共享同一进程的内存空间和资源。
    ③ 进程间通信较为复杂，同一台计算机的进程通信称为 IPC（Inter-process communication）；不同计算机之间的进程通信，需要通过网络，并遵守共同的协议，例如 HTTP。
    ④ 线程通信相对简单，因为它们共享进程内的内存，例子：多个线程可以访问同一个共享变量。
    ⑤ 线程更轻量，线程上下文切换成本一般上要比进程上下文切换低。
