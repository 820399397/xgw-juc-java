线程的状态：有说5种状态的，有说6种状态的。
1.5种状态：这是从 操作系统 层面来描述的.
    - 初始状态：仅是在语言层面创建了线程对象（没有调用线程的start()方法），还未与操作系统线程关联.
    - 可运行状态（就绪状态）：指该线程已经被创建（与操作系统线程关联），可以由CPU调度执行.
    - 运行状态：指获取了 CPU 时间片，正在运行中。当 CPU 时间片用完，会从【运行状态】转换至【可运行状态】，会导致线程的上下文切换.
    - 阻塞状态：如果调用了阻塞 API，如 BIO 读写文件，这时该线程实际不会用到 CPU，但还是会导致线程上下文切换，进入阻塞状态。等 BIO 操作完毕，会由操作系统唤醒阻塞的线程，转换至【可运行状态】
                与【可运行状态】的区别是，对【阻塞状态】的线程来说只要它们一直不唤醒，调度器就一直不会考虑调度它们
    - 终止状态：表示线程已经执行完毕，生命周期已经结束，不会再转换为其他状态.

2.6种状态：这是从 Java API 层面来描述的。根据 Thread.State 枚举，分为六种状态.
    - 新建状态（New）：线程被创建但还没有调用.
    - 可运行状态（Runnable）：线程可以在 CPU 上运行，此时它可能正在运行，也可能正在等待 CPU 时间片.
        注意，Java API 层面的 RUNNABLE 状态涵盖了 操作系统 层面的【可运行状态】、【运行状态】和【阻塞状态】（由于 BIO 导致的线程阻塞，在 Java 里无法区分，仍然认为是可运行）
        @See cn.xuguowen.juc.thread_status.Test1 这段代码验证了如上的说法.
    -BLOCKED ， WAITING ， TIMED_WAITING 都是 Java API 层面对【阻塞状态】的细分.
    -TERMINATED 当线程代码运行结束.